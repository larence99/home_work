#include <iostream>
#include <string.h>
class Stroka {
private:
	char* firststring;
	int size;
public:
	void append(char* firststring);
	void split(char* delim);
	string substring(int startPos, int num);
	Stroka(char* array) { firststring = array; }

};
void Stroka::append(char* secondstring) {
	int newsize = strlen(secondstring);
	int lensecond = newsize;
	int lenfirst = size;
	size += newsize;
	char* string = new char[size];

	for (int i = 0; i < lenfirst; i++) {
		string[i] = firststring[i];
	}
	for (int i = lenfirst; i < size; i++) {
		string[i] = secondstring[i];
	}
}

string Stroka::substring(int startPos, int num) {
	char* tmp = new char[num];
	for (int i = startPos; i < startPos + num; i++) {
		tmp[i] = firststring[i];
	}
	return tmp;
}


void Stroka::split(char* delim) {
	for (int i = 0; i < size; i++) {
		if (firststring[i] == *delim) {
			char *tmp = new char[i];
			for (j = 0; j<i; j++)tmp[j] = firststring[j];
			cout << *tmp<<endl;
		}
	}
}
